{"pageProps":{"post":{"title":"CRUD in Spring Boot with Spring Data JPA","excerpt":"Tutorial about CRUD operations in Spring Boot with Spring Data JPA.","keywords":["Java","Spring Boot","Spring Data JPA","CRUD"],"date":"2016-04-11","image":{"cover":"/assets/blog/crud-in-spring-boot-with-spring-data-jpa/cover.png","og":"/assets/blog/crud-in-spring-boot-with-spring-data-jpa/cover.png"},"slug":"crud-in-spring-boot-with-spring-data-jpa","content":"\r\nTutorial about CRUD operations in Spring Boot with Spring Data JPA. Application developed in this tutorial performs adding, editing, updating and deleting contacts.\r\n\r\nWe will be using the following to successfully create our application in this tutorial:\r\n\r\n- Spring Web (Spring MVC, Spring Web MVC, a lot)\r\n- MySQL\r\n- Spring Data JPA (JPA, Hibernate)\r\n- Thymeleaf - template engine; bye JSP!\r\n- Many more, more than 50. With just a few lines in our pom.xml, let Spring Boot provide everything.\r\n\r\n## Create A Project\r\n\r\nGo to [Spring Intializr](https://start.spring.io \"Spring Initializr\") and create a Maven project.\r\n\r\n<img class=\"img-fluid\" src=\"/assets/blog/crud-in-spring-boot-with-spring-data-jpa/1.png\" alt=\"Create Project in Spring Initializr\">\r\n<br>\r\n<br>\r\n\r\nOnce done, hit **Generate Project** button to save the project.\r\n\r\nUnzip the project and start coding. You can use any editor or IDE you prefer. For Eclipse users, you will have to issue the following command via Terminal before importing to Eclipse:\r\n\r\n```bash\r\n$ cd springbootcrud\r\n$ mvn eclipse:eclipse\r\n```\r\n\r\nFor NetBeans users, just click `File > Open Project...` or click `Open Project` toolbar, and locate where you unzipped the project. NetBeans natively suports Maven project, no conversion needed.\r\n\r\n## Dependencies\r\n\r\nUpdadte your `pom.xml`:\r\n\r\n```markup\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\r\n\t<groupId>io.github.julianjupiter</groupId>\r\n\t<artifactId>springbootcrud</artifactId>\r\n\t<version>0.0.1</version>\r\n\t<packaging>jar</packaging>\r\n\r\n\t<name>CRUD in Spring Boot with Spring Data JPA</name>\r\n\t<description>CRUD in Spring Boot with Spring Data JPA</description>\r\n\r\n\t<parent>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t\t<version>1.3.3.RELEASE</version>\r\n\t\t<relativePath/> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\r\n\t<properties>\r\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n\t\t<java.version>1.8</java.version>\r\n\t</properties>\r\n\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-thymeleaf</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>mysql</groupId>\r\n\t\t\t<artifactId>mysql-connector-java</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\r\n</project>\r\n\r\n```\r\n\r\n## Database Table\r\n\r\nCreate database in MySQL. Mine is `springbootcrud`. Add the following table:\r\n\r\n```sql\r\nCREATE TABLE `contact` (\r\n`id` int(11) NOT NULL AUTO_INCREMENT,\r\n`last_name` varchar(100) NOT NULL,\r\n`first_name` varchar(100) NOT NULL,\r\n`mobile_no` varchar(11) NOT NULL,\r\n`address` varchar(255) NOT NULL,\r\n`date_created` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,\r\nPRIMARY KEY (`id`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;\r\n```\r\n\r\n## Codes\r\n\r\n### Property\r\n\r\nInsert the following to `application.properties`\r\n\r\n```properties\r\nspring.datasource.url = jdbc:mysql://localhost:3306/springbootcrud\r\nspring.datasource.username = root\r\nspring.datasource.password = admin123\r\n```\r\n\r\n### Configuration\r\n\r\n`RepositoryConfiguration.java`\r\n\r\n```java\r\npackage io.github.julianjupiter.springbootcrud.configuration;\r\n\r\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\r\nimport org.springframework.boot.orm.jpa.EntityScan;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.data.jpa.repository.config.EnableJpaRepositories;\r\nimport org.springframework.transaction.annotation.EnableTransactionManagement;\r\n\r\n@Configuration\r\n@EnableAutoConfiguration\r\n@EntityScan(basePackages = {\"io.github.julianjupiter.springbootcrud.domain\"})\r\n@EnableJpaRepositories(basePackages = {\"io.github.julianjupiter.springbootcrud.repository\"})\r\n@EnableTransactionManagement\r\npublic class RepositoryConfiguration {\r\n}\r\n```\r\n\r\n### Main Class\r\n\r\n`Application.java`\r\n\r\n```java\r\npackage io.github.julianjupiter;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\n\r\n@SpringBootApplication\r\npublic class Application {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(Application.class, args);\r\n\t}\r\n}\r\n```\r\n\r\n### Domain\r\n\r\n`Contact.java`\r\n\r\n```java\r\npackage io.github.julianjupiter.springbootcrud.domain;\r\n\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.GeneratedValue;\r\nimport javax.persistence.GenerationType;\r\nimport javax.persistence.Id;\r\nimport javax.validation.constraints.Size;\r\nimport org.hibernate.validator.constraints.NotEmpty;\r\n\r\n@Entity\r\npublic class Contact {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.AUTO)\r\n    private Integer id;\r\n    @NotEmpty(message = \"Last Name is required.\")\r\n    @Size(min = 2, message = \"Last Name must be at least 2 characters.\")\r\n    private String lastName;\r\n    @NotEmpty(message = \"First Name is required.\")\r\n    @Size(min = 2, message = \"First Name must be at least 2 characters.\")\r\n    private String firstName;\r\n    @Column(name = \"mobile_no\")\r\n    @Size(min = 11, max = 11, message = \"Mobile no. must be 11 digits.\")\r\n    private String mobileNumber;\r\n    @NotEmpty(message = \"Address is required.\")\r\n    private String address;\r\n\r\n    public Integer getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(Integer id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public String getLastName() {\r\n        return lastName;\r\n    }\r\n\r\n    public void setLastName(String lastName) {\r\n        this.lastName = lastName;\r\n    }\r\n\r\n    public String getFirstName() {\r\n        return firstName;\r\n    }\r\n\r\n    public void setFirstName(String firstName) {\r\n        this.firstName = firstName;\r\n    }\r\n\r\n    public String getMobileNumber() {\r\n        return mobileNumber;\r\n    }\r\n\r\n    public void setMobileNumber(String mobileNumber) {\r\n        this.mobileNumber = mobileNumber;\r\n    }\r\n\r\n    public String getAddress() {\r\n        return address;\r\n    }\r\n\r\n    public void setAddress(String address) {\r\n        this.address = address;\r\n    }\r\n\r\n}\r\n```\r\n\r\n### Repository\r\n\r\n`ContactRepository.java`\r\n\r\n```java\r\npackage io.github.julianjupiter.springbootcrud.repository;\r\n\r\nimport io.github.julianjupiter.springbootcrud.domain.Contact;\r\nimport org.springframework.data.repository.CrudRepository;\r\n\r\npublic interface ContactRepository extends CrudRepository<Contact, Integer>{\r\n\r\n}\r\n```\r\n\r\n### Service\r\n\r\n`ContactService.java`\r\n\r\n```java\r\npackage io.github.julianjupiter.springbootcrud.service;\r\n\r\nimport io.github.julianjupiter.springbootcrud.domain.Contact;\r\n\r\npublic interface ContactService {\r\n    Iterable<Contact> getAllContacts();\r\n    Contact getContactById(Integer id);\r\n    Contact saveContact(Contact contact);\r\n    void deleteContact(Integer id);\r\n}\r\n```\r\n\r\n`ContactServiceImpl.java`\r\n\r\n```java\r\npackage io.github.julianjupiter.springbootcrud.service;\r\n\r\nimport io.github.julianjupiter.springbootcrud.domain.Contact;\r\nimport io.github.julianjupiter.springbootcrud.repository.ContactRepository;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\n\r\n@Service\r\npublic class ContactServiceImpl implements ContactService {\r\n\r\n    private ContactRepository contactRepository;\r\n\r\n    @Autowired\r\n    public void setContactRepository(ContactRepository contactRepository) {\r\n        this.contactRepository = contactRepository;\r\n    }\r\n\r\n    @Override\r\n    public Iterable<Contact> getAllContacts() {\r\n        return this.contactRepository.findAll();\r\n    }\r\n\r\n    @Override\r\n    public Contact getContactById(Integer id) {\r\n        return this.contactRepository.findOne(id);\r\n    }\r\n\r\n    @Override\r\n    public Contact saveContact(Contact contact) {\r\n        return this.contactRepository.save(contact);\r\n    }\r\n\r\n    @Override\r\n    public void deleteContact(Integer id) {\r\n        this.contactRepository.delete(id);\r\n    }\r\n\r\n}\r\n```\r\n\r\n### Controllers\r\n\r\n`HomeController.java`\r\n\r\n```java\r\npackage io.github.julianjupiter.springbootcrud.controller;\r\n\r\nimport org.springframework.stereotype.Controller;\r\nimport org.springframework.ui.Model;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\n\r\n@Controller\r\npublic class HomeController {\r\n    @RequestMapping(value = { \"\", \"/\", \"/home\" })\r\n    public String index(Model model) {\r\n        model.addAttribute(\"activePage\", \"home\");\r\n        return \"index\";\r\n    }\r\n}\r\n```\r\n\r\n`ContactController.java`\r\n\r\n```java\r\npackage io.github.julianjupiter.springbootcrud.controller;\r\n\r\nimport io.github.julianjupiter.springbootcrud.domain.Contact;\r\nimport io.github.julianjupiter.springbootcrud.service.ContactService;\r\nimport javax.validation.Valid;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Controller;\r\nimport org.springframework.ui.Model;\r\nimport org.springframework.validation.BindingResult;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RequestMethod;\r\n\r\n@Controller\r\n@RequestMapping(\"/contacts\")\r\npublic class ContactController {\r\n    private ContactService contactService;\r\n\r\n    @Autowired\r\n    public void setContactService(ContactService contactService) {\r\n        this.contactService = contactService;\r\n    }\r\n\r\n    @RequestMapping(value = { \"\", \"/\" })\r\n    public String index(Model model) {\r\n        model.addAttribute(\"activePage\", \"contacts\");\r\n        model.addAttribute(\"contacts\", this.contactService.getAllContacts());\r\n        return \"contacts/index\";\r\n    }\r\n\r\n    @RequestMapping(value = \"/add\", method = RequestMethod.GET)\r\n    public String addContactForm(Contact contact, Model model) {\r\n        model.addAttribute(\"activePage\", \"contacts\");\r\n        return \"contacts/add\";\r\n    }\r\n\r\n    @RequestMapping(value = \"/add\", method = RequestMethod.POST)\r\n    public String addContact(@Valid Contact contact, BindingResult bindingResult, Model model) {\r\n        if (bindingResult.hasErrors()) {\r\n            model.addAttribute(\"activePage\", \"contacts\");\r\n            return \"contacts/add\";\r\n        }\r\n\r\n        this.contactService.saveContact(contact);\r\n        return \"redirect:/contacts\";\r\n    }\r\n\r\n    @RequestMapping(value = \"/view/{id}\")\r\n    public String viewContact(@PathVariable Integer id, Model model) {\r\n        model.addAttribute(\"contact\", this.contactService.getContactById(id));\r\n        model.addAttribute(\"activePage\", \"contacts\");\r\n        return \"contacts/view\";\r\n    }\r\n\r\n    @RequestMapping(value = \"/edit/{id}\")\r\n    public String editContact(@PathVariable Integer id, Model model) {\r\n        model.addAttribute(\"contact\", this.contactService.getContactById(id));\r\n        model.addAttribute(\"activePage\", \"contacts\");\r\n        return \"contacts/edit\";\r\n    }\r\n\r\n    @RequestMapping(value = \"/update\", method = RequestMethod.POST)\r\n    public String updateContact(Contact contact) {\r\n        System.out.println(\"Contact ID: \" + contact.getId());\r\n        this.contactService.saveContact(contact);\r\n        return \"redirect:/contacts/view/\" + contact.getId();\r\n    }\r\n\r\n    @RequestMapping(value = \"/delete/{id}\", method = RequestMethod.GET)\r\n    public String deleteContact(@PathVariable Integer id) {\r\n        this.contactService.deleteContact(id);\r\n        return \"redirect:/contacts\";\r\n    }\r\n\r\n}\r\n```\r\n\r\n## Views\r\n\r\n### Fragments\r\n\r\n`templates/fragments/head.html`\r\n\r\n```markup\r\n<!DOCTYPE html>\r\n<html xmlns:th=\"http://www.thymeleaf.org\">\r\n    <head>\r\n        <link href=\"../static/css/bootstrap.min.css\" th:href=\"@{/css/bootstrap.min.css}\" rel=\"stylesheet\" media=\"screen\" />\r\n        <link href=\"../static/css/app.css\" th:href=\"@{/css/app.css}\" rel=\"stylesheet\" media=\"screen\" />\r\n    </head>\r\n    <body>\r\n    </body>\r\n</html>\r\n```\r\n\r\n`templates/fragments/header.html`\r\n\r\n```markup\r\n<!DOCTYPE html>\r\n<html xmlns:th=\"http://www.thymeleaf.org\">\r\n    <head></head>\r\n    <body>\r\n        <nav class=\"navbar navbar-inverse navbar-fixed-top\">\r\n            <div class=\"container\">\r\n                <div class=\"navbar-header\">\r\n                    <button type=\"button\" class=\"navbar-toggle collapsed\"\r\n                            data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\"\r\n                            aria-controls=\"navbar\">\r\n                        <span class=\"sr-only\">Toggle navigation</span> <span\r\n                            class=\"icon-bar\"></span> <span class=\"icon-bar\"></span> <span\r\n                            class=\"icon-bar\"></span>\r\n                    </button>\r\n                    <a class=\"navbar-brand\" href=\"#\" th:href=\"@{/}\">Spring Boot</a>\r\n                </div>\r\n                <div id=\"navbar\" class=\"collapse navbar-collapse\">\r\n                    <ul class=\"nav navbar-nav\">\r\n                        <li th:class=\"${activePage == 'home'}? 'active' : ''\"><a href=\"#\" th:href=\"@{/}\">Home</a></li>\r\n                        <li th:class=\"${activePage} == 'contacts'? 'active' : ''\"><a href=\"#\" th:href=\"@{/contacts}\">Contacts</a></li>\r\n                    </ul>\r\n                </div>\r\n                <!--/.nav-collapse -->\r\n            </div>\r\n        </nav>\r\n    </body>\r\n</html>\r\n```\r\n\r\n`templates/fragments/js.html`\r\n\r\n```markup\r\n<!DOCTYPE html>\r\n<html xmlns:th=\"http://www.thymeleaf.org\">\r\n    <head></head>\r\n    <body>\r\n        <script src=\"../static/js/jquery.min.js\" th:src=\"@{/js/jquery.min.js}\"></script>\r\n        <script src=\"../static/js/bootstrap.min.js\" th:src=\"@{/js/bootstrap.min.js}\"></script>\r\n    </body>\r\n</html>\r\n```\r\n\r\n### Home\r\n\r\n`templates/index.html`\r\n\r\n```markup\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>Home - CRUD in Spring Boot with Spring Data JPA</title>\r\n        <!--/*/ <th:block th:include=\"fragments/head :: head\"></th:block> /*/-->\r\n    </head>\r\n    <body>\r\n        <!--/*/ <th:block th:include=\"fragments/header :: body\"></th:block> /*/-->\r\n        <div class=\"container\">\r\n            <div class=\"starter-template\">\r\n                <h1>CRUD in Spring Boot with Spring Data JPA</h1>\r\n                <p class=\"lead\">This application demonstrates CRUD application developed with Spring Boot, Spring Data JPA, Thymeleaf and MySQL.<br />\r\n                    <a href=\"/contacts\" class=\"btn btn-primary btn-lg\">Contacts</a>\r\n                </p>\r\n            </div>\r\n        </div>\r\n        <!--/*/ <th:block th:include=\"fragments/js :: body\"></th:block> /*/-->\r\n    </body>\r\n</html>\r\n```\r\n\r\n### Contacts\r\n\r\n`templates/contact/index.html`\r\n\r\n```markup\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>Contacts - CRUD in Spring Boot with Spring Data JPA</title>\r\n        <!--/*/ <th:block th:include=\"fragments/head :: head\"></th:block> /*/-->\r\n    </head>\r\n    <body>\r\n        <!--/*/ <th:block th:include=\"fragments/header :: body\"></th:block> /*/-->\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-10 col-sm-offset-1\">\r\n                    <div class=\"panel panel-default\">\r\n                        <!-- Default panel contents -->\r\n                        <div class=\"panel-heading\">Contacts <a th:href=\"@{/contacts/add}\" class=\"btn btn-primary\"><span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span></a></div>\r\n                        <table class=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Last Name</th>\r\n                                    <th>First Name</th>\r\n                                    <th>Mobile No.</th>\r\n                                    <th>Address</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <div th:if=\"!${#lists.isEmpty(contacts)}\">\r\n                                <tr th:each = \"contact : ${contacts}\">\r\n                                    <td th:text = \"${contact.id}\"></td>\r\n                                    <td th:text = \"${contact.lastName}\"></td>\r\n                                    <td th:text = \"${contact.firstName}\"></td>\r\n                                    <td th:text = \"${contact.mobileNumber}\"></td>\r\n                                    <td th:text = \"${contact.address}\"></td>\r\n                                    <td>\r\n                                        <div class=\"btn-group\" role=\"group\" aria-label=\"...\">\r\n                                            <a th:href=\"${'/contacts/view/' + contact.id}\" class=\"btn btn-info\"><span class=\"glyphicon glyphicon-eye-open\" aria-hidden=\"true\"></span></a>\r\n                                            <a th:href=\"${'/contacts/edit/' + contact.id}\" class=\"btn btn-success\"><span class=\"glyphicon glyphicon-edit\" aria-hidden=\"true\"></span></a>\r\n                                            <a th:href=\"${'/contacts/delete/' + contact.id}\" class=\"btn btn-danger\"><span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span></a>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </div>\r\n                            <div th:if=\"${#lists.isEmpty(contacts)}\">\r\n                                <tr>\r\n                                    <td>No contact exists!</td>\r\n                                </tr>\r\n                            </div>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!--/*/ <th:block th:include=\"fragments/js :: body\"></th:block> /*/-->\r\n        <script src=\"../static/js/app.js\" th:src=\"@{/js/app.js}\"></script>\r\n    </body>\r\n</html>\r\n```\r\n\r\n`templates/contact/add.html`\r\n\r\n```markup\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>Contacts - CRUD in Spring Boot with Spring Data JPA</title>\r\n        <!--/*/ <th:block th:include=\"fragments/head :: head\"></th:block> /*/-->\r\n    </head>\r\n    <body>\r\n        <!--/*/ <th:block th:include=\"fragments/header :: body\"></th:block> /*/-->\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-8 col-sm-offset-2\">\r\n                    <!--<div class=\"container\">-->\r\n                    <div class=\"panel panel-default\">\r\n                        <!-- Default panel contents -->\r\n                        <div class=\"panel-heading\">Add Contact</div>\r\n                        <div class=\"panel-body\">\r\n                            <form action=\"/contacts/add\" th:action=\"@{/contacts/add}\" th:object=\"${contact}\" method=\"post\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"inputLastName\">Last Name</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"inputLastName\" placeholder=\"Last Name\" th:field=\"*{lastName}\" name=\"lastName\" />\r\n                                    <span  class=\"help-block\" th:if=\"${#fields.hasErrors('lastName')}\" th:errors=\"*{lastName}\">Last Name Error</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"inputFirstName\">First Name</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"inputFirstName\" placeholder=\"First Name\" th:field=\"*{firstName}\" name=\"firstName\" />\r\n                                    <span  class=\"help-block\" th:if=\"${#fields.hasErrors('firstName')}\" th:errors=\"*{firstName}\">First Name Error</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"inputMobileNumber\">Mobile Number</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"inputMobileNumber\" placeholder=\"Mobile No.\" th:field=\"*{mobileNumber}\" name=\"mobileNumber\" />\r\n                                    <span  class=\"help-block\" th:if=\"${#fields.hasErrors('mobileNumber')}\" th:errors=\"*{mobileNumber}\">Mobile Number Error</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"inputAddress\">Address</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"inputAddress\" placeholder=\"Address\" th:field=\"*{address}\" name=\"address\" />\r\n                                    <span  class=\"help-block\" th:if=\"${#fields.hasErrors('address')}\" th:errors=\"*{address}\">Address Error</span>\r\n                                </div>\r\n                                <div class=\"text-right\">\r\n                                    <a href=\"/contacts\" th:href=\"@{/contacts}\" class=\"btn btn-default\">Cancel</a>\r\n                                    <button type=\"submit\" class=\"btn btn-primary\">Save</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div class=\"panel-footer\">\r\n                        </div>\r\n                    </div>\r\n                    <!--</div>-->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!--/*/ <th:block th:include=\"fragments/js :: body\"></th:block> /*/-->\r\n        <script src=\"../static/js/app.js\" th:src=\"@{/js/app.js}\"></script>\r\n    </body>\r\n</html>\r\n```\r\n\r\n`templates/contact/view.html`\r\n\r\n```markup\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>Contacts - CRUD in Spring Boot with Spring Data JPA</title>\r\n        <!--/*/ <th:block th:include=\"fragments/head :: head\"></th:block> /*/-->\r\n    </head>\r\n    <body>\r\n        <!--/*/ <th:block th:include=\"fragments/header :: body\"></th:block> /*/-->\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-8 col-sm-offset-2\">\r\n                    <!--<div class=\"container\">-->\r\n                    <div class=\"panel panel-default\">\r\n                        <!-- Default panel contents -->\r\n                        <div class=\"panel-heading\">View Contact</div>\r\n                        <div class=\"panel-body\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"inputId\">ID</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"inputId\" placeholder=\"ID\" th:field=\"*{contact.id}\" name=\"id\" disabled=\"disabled\" />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"inputLastName\">Last Name</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"inputLastName\" placeholder=\"Last Name\" th:field=\"*{contact.lastName}\" name=\"lastName\" disabled=\"disabled\" />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"inputFirstName\">First Name</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"inputFirstName\" placeholder=\"First Name\" th:field=\"*{contact.firstName}\" name=\"firstName\" disabled=\"disabled\" />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"inputMobileNumber\">Mobile Number</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"inputMobileNumber\" placeholder=\"Mobile No.\" th:field=\"*{contact.mobileNumber}\" name=\"mobileNumber\" disabled=\"disabled\" />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"inputAddress\">Address</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"inputAddress\" placeholder=\"Address\" th:field=\"*{contact.address}\" name=\"address\" disabled=\"disabled\" />\r\n                            </div>\r\n                            <div class=\"text-right\">\r\n                                <a href=\"/contacts\" th:href=\"@{/contacts}\" class=\"btn btn-default\">Back</a>\r\n                                <a th:href=\"@{'/contacts/edit/' + ${contact.id}}\" class=\"btn btn-primary\">Edit</a>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"panel-footer\">\r\n                        </div>\r\n                    </div>\r\n                    <!--</div>-->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!--/*/ <th:block th:include=\"fragments/js :: body\"></th:block> /*/-->\r\n        <script src=\"../static/js/app.js\" th:src=\"@{/js/app.js}\"></script>\r\n    </body>\r\n</html>\r\n```\r\n\r\n`templates/contact/edit.html`\r\n\r\n```markup\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>Contacts - CRUD in Spring Boot with Spring Data JPA</title>\r\n        <!--/*/ <th:block th:include=\"fragments/head :: head\"></th:block> /*/-->\r\n    </head>\r\n    <body>\r\n        <!--/*/ <th:block th:include=\"fragments/header :: body\"></th:block> /*/-->\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-8 col-sm-offset-2\">\r\n                    <!--<div class=\"container\">-->\r\n                    <div class=\"panel panel-default\">\r\n                        <!-- Default panel contents -->\r\n                        <div class=\"panel-heading\">Edit Contact</div>\r\n                        <div class=\"panel-body\">\r\n                            <form th:action=\"@{/contacts/update}\" th:object=\"${contact}\" method=\"post\">\r\n                                <input type=\"hidden\" th:field=\"*{id}\" />\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"inputId\">ID</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"inputId\" placeholder=\"ID\" th:field=\"*{id}\" disabled=\"disabled\" />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"inputLastName\">Last Name</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"inputLastName\" placeholder=\"Last Name\" th:field=\"*{lastName}\" />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"inputFirstName\">First Name</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"inputFirstName\" placeholder=\"First Name\" th:field=\"*{firstName}\" />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"inputMobileNumber\">Mobile Number</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"inputMobileNumber\" placeholder=\"Mobile No.\" th:field=\"*{mobileNumber}\" />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"inputAddress\">Address</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"inputAddress\" placeholder=\"Address\" th:field=\"*{address}\" />\r\n                                </div>\r\n                                <div class=\"text-right\">\r\n                                    <a href=\"/contacts\" th:href=\"@{/contacts}\" class=\"btn btn-default\">Cancel</a>\r\n                                    <button type=\"submit\" class=\"btn btn-primary\">Save</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div class=\"panel-footer\">\r\n                        </div>\r\n                    </div>\r\n                    <!--</div>-->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!--/*/ <th:block th:include=\"fragments/js :: body\"></th:block> /*/-->\r\n        <script src=\"../static/js/app.js\" th:src=\"@{/js/app.js}\"></script>\r\n    </body>\r\n</html>\r\n```\r\n\r\n## Static Files\r\n\r\n### CSS\r\n\r\n`static/css/app.css`\r\n\r\n```css\r\nbody {\r\n  padding-top: 60px;\r\n}\r\n\r\n.starter-template {\r\n  padding: 40px 15px;\r\n  text-align: center;\r\n}\r\n```\r\n\r\nAlso included are CSS (`bootstrap.min.css`, `bootstrap-theme.min.css`) and JavaScript (`bootstrap.min`) files of **_Bootstrap_** as well as **_jQuery_**. They can also be downloaded from [Bootstrap](http://getbootstrap.com) website.\r\n\r\n## Running the Application\r\n\r\n```bash\r\n$ mvn package && java -jar target/springbootcrud-0.0.1.jar\r\n```\r\n\r\nOpen your browser and point to: <a href=\"http://localhost:8080\" _target=\"blank\">http://localhost:8080</a>\r\n\r\n## Screenshots\r\n\r\n<br>\r\n\r\n## Home Page\r\n\r\n<br>\r\n<img class=\"img-fluid\" src=\"/assets/blog/crud-in-spring-boot-with-spring-data-jpa/2.png\" alt=\"Create Project in Spring Initializr\">\r\n<br>\r\n<br>\r\n\r\n### Contacts Page\r\n\r\n<br>\r\n\r\n#### Contact List (without records)\r\n\r\n<br>\r\n<img class=\"img-fluid\" src=\"/assets/blog/crud-in-spring-boot-with-spring-data-jpa/3.png\" alt=\"Create Project in Spring Initializr\">\r\n<br>\r\n<br>\r\n\r\n#### Add Contact Form\r\n\r\n<br>\r\n<img class=\"img-fluid\" src=\"/assets/blog/crud-in-spring-boot-with-spring-data-jpa/4.png\" alt=\"Create Project in Spring Initializr\">\r\n<br>\r\n<br>\r\n<img class=\"img-fluid\" src=\"/assets/blog/crud-in-spring-boot-with-spring-data-jpa/5.png\" alt=\"Create Project in Spring Initializr\">\r\n<br>\r\n<br>\r\n\r\n#### Contact List (with records)\r\n\r\n<br>\r\n<img class=\"img-fluid\" src=\"/assets/blog/crud-in-spring-boot-with-spring-data-jpa/6.png\" alt=\"Create Project in Spring Initializr\">\r\n<br>\r\n<br>\r\n\r\n#### View Contact\r\n\r\n<br>\r\n<img class=\"img-fluid\" src=\"/assets/blog/crud-in-spring-boot-with-spring-data-jpa/7.png\" alt=\"Create Project in Spring Initializr\">\r\n<br>\r\n<br>\r\n\r\n#### Edit Contact Form\r\n\r\n<br>\r\n<img class=\"img-fluid\" src=\"/assets/blog/crud-in-spring-boot-with-spring-data-jpa/8.png\" alt=\"Create Project in Spring Initializr\">\r\n<br>\r\n<br>\r\nPlease post your comments or suggestions.\r\n\r\nYou can download complete source code [here](https://github.com/julianjupiter/springbootcrud \"springbootcrud Source Code\").\r\n"}},"__N_SSG":true}